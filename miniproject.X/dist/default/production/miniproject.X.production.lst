

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jan 28 22:44:11 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0007                     _PORTCbits	set	7
   210  0009                     _PORTEbits	set	9
   211  0006                     _PORTBbits	set	6
   212  0005                     _PORTAbits	set	5
   213  0008                     _PORTDbits	set	8
   214  008F                     _OSCCON	set	143
   215  0088                     _TRISD	set	136
   216  0087                     _TRISC	set	135
   217  0086                     _TRISB	set	134
   218  0085                     _TRISA	set	133
   219  0189                     _ANSELH	set	393
   220  0188                     _ANSEL	set	392
   221                           
   222                           	psect	strings
   223  0003                     __pstrings:
   224  0003                     stringtab:
   225  0003                     __stringtab:
   226  0003                     stringcode:	
   227                           ;	String table - string pointers are 1 byte each
   228                           
   229  0003                     stringdir:
   230  0003  3000               	movlw	high stringdir
   231  0004  008A               	movwf	10
   232  0005  0804               	movf	4,w
   233  0006  0A84               	incf	4,f
   234  0007  0782               	addwf	2,f
   235  0008                     __stringbase:
   236  0008  3400               	retlw	0
   237  0009                     __end_of__stringtab:
   238  0009                     STR_2:
   239  0009  344B               	retlw	75	;'K'
   240  000A  3445               	retlw	69	;'E'
   241  000B  3445               	retlw	69	;'E'
   242  000C  3450               	retlw	80	;'P'
   243  000D  3420               	retlw	32	;' '
   244  000E  3457               	retlw	87	;'W'
   245  000F  3441               	retlw	65	;'A'
   246  0010  3452               	retlw	82	;'R'
   247  0011  344D               	retlw	77	;'M'
   248  0012  342E               	retlw	46	;'.'
   249  0013  342E               	retlw	46	;'.'
   250  0014  342E               	retlw	46	;'.'
   251  0015  3400               	retlw	0
   252  0016                     STR_6:
   253  0016  3444               	retlw	68	;'D'
   254  0017  3449               	retlw	73	;'I'
   255  0018  3453               	retlw	83	;'S'
   256  0019  3450               	retlw	80	;'P'
   257  001A  3445               	retlw	69	;'E'
   258  001B  344E               	retlw	78	;'N'
   259  001C  3453               	retlw	83	;'S'
   260  001D  3449               	retlw	73	;'I'
   261  001E  344E               	retlw	78	;'N'
   262  001F  3447               	retlw	71	;'G'
   263  0020  342E               	retlw	46	;'.'
   264  0021  342E               	retlw	46	;'.'
   265  0022  3400               	retlw	0
   266  0023                     STR_4:
   267  0023  3442               	retlw	66	;'B'
   268  0024  344F               	retlw	79	;'O'
   269  0025  3449               	retlw	73	;'I'
   270  0026  344C               	retlw	76	;'L'
   271  0027  3449               	retlw	73	;'I'
   272  0028  344E               	retlw	78	;'N'
   273  0029  3447               	retlw	71	;'G'
   274  002A  342E               	retlw	46	;'.'
   275  002B  342E               	retlw	46	;'.'
   276  002C  342E               	retlw	46	;'.'
   277  002D  3400               	retlw	0
   278  002E                     STR_1:
   279  002E  3457               	retlw	87	;'W'
   280  002F  3445               	retlw	69	;'E'
   281  0030  344C               	retlw	76	;'L'
   282  0031  3443               	retlw	67	;'C'
   283  0032  344F               	retlw	79	;'O'
   284  0033  344D               	retlw	77	;'M'
   285  0034  3445               	retlw	69	;'E'
   286  0035  342E               	retlw	46	;'.'
   287  0036  342E               	retlw	46	;'.'
   288  0037  3400               	retlw	0
   289  0038                     STR_5:
   290  0038  3442               	retlw	66	;'B'
   291  0039  344F               	retlw	79	;'O'
   292  003A  3449               	retlw	73	;'I'
   293  003B  344C               	retlw	76	;'L'
   294  003C  3449               	retlw	73	;'I'
   295  003D  344E               	retlw	78	;'N'
   296  003E  3447               	retlw	71	;'G'
   297  003F  342E               	retlw	46	;'.'
   298  0040  342E               	retlw	46	;'.'
   299  0041  3400               	retlw	0
   300  0009                     
   301                           	psect	cinit
   302  07F8                     start_initialization:	
   303                           ; #config settings
   304                           
   305  07F8                     __initialization:
   306                           
   307                           ; Clear objects allocated to BANK0
   308  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   309  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   310  07FA  01A0               	clrf	__pbssBANK0& (0+127)
   311  07FB  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   312  07FC                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315  07FC                     __end_of__initialization:
   316  07FC  0183               	clrf	3
   317  07FD  120A  118A  2E85   	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	bssBANK0
   320  0020                     __pbssBANK0:
   321  0020                     _i:
   322  0020                     	ds	2
   323                           
   324                           	psect	cstackCOMMON
   325  0070                     __pcstackCOMMON:
   326  0070                     ?_Lcd_Port:
   327  0070                     ??_Lcd_Port:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_Lcd_Cmd:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_Lcd_Init:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_Lcd_Write_Char:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_Lcd_Write_String:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_main:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_Lcd_Clear:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     Lcd_Port@a:	
   349                           ; 2 bytes @ 0x0
   350                           
   351                           
   352                           ; 1 bytes @ 0x0
   353  0070                     	ds	1
   354  0071                     ??_Lcd_Cmd:
   355  0071                     ??_Lcd_Write_Char:	
   356                           ; 1 bytes @ 0x1
   357                           
   358                           
   359                           ; 1 bytes @ 0x1
   360  0071                     	ds	1
   361  0072                     Lcd_Write_Char@temp:
   362                           
   363                           ; 1 bytes @ 0x2
   364  0072                     	ds	1
   365  0073                     Lcd_Cmd@a:
   366  0073                     Lcd_Write_Char@y:	
   367                           ; 1 bytes @ 0x3
   368                           
   369                           
   370                           ; 1 bytes @ 0x3
   371  0073                     	ds	1
   372  0074                     ??_Lcd_Clear:
   373  0074                     ?_Lcd_Set_Cursor:	
   374                           ; 1 bytes @ 0x4
   375                           
   376  0074                     ??_Lcd_Init:	
   377                           ; 1 bytes @ 0x4
   378                           
   379  0074                     Lcd_Set_Cursor@b:	
   380                           ; 1 bytes @ 0x4
   381                           
   382  0074                     Lcd_Write_Char@a:	
   383                           ; 1 bytes @ 0x4
   384                           
   385                           
   386                           ; 1 bytes @ 0x4
   387  0074                     	ds	1
   388  0075                     ??_Lcd_Set_Cursor:
   389  0075                     ??_Lcd_Write_String:	
   390                           ; 1 bytes @ 0x5
   391                           
   392  0075                     Lcd_Write_String@i:	
   393                           ; 1 bytes @ 0x5
   394                           
   395                           
   396                           ; 2 bytes @ 0x5
   397  0075                     	ds	2
   398  0077                     Lcd_Set_Cursor@a:
   399  0077                     Lcd_Write_String@a:	
   400                           ; 1 bytes @ 0x7
   401                           
   402                           
   403                           ; 1 bytes @ 0x7
   404  0077                     	ds	1
   405  0078                     Lcd_Set_Cursor@z:
   406                           
   407                           ; 1 bytes @ 0x8
   408  0078                     	ds	1
   409  0079                     Lcd_Set_Cursor@y:
   410                           
   411                           ; 1 bytes @ 0x9
   412  0079                     	ds	1
   413  007A                     Lcd_Set_Cursor@temp:
   414                           
   415                           ; 1 bytes @ 0xA
   416  007A                     	ds	1
   417  007B                     ??_main:
   418                           
   419                           ; 1 bytes @ 0xB
   420  007B                     	ds	3
   421                           
   422                           	psect	maintext
   423  0685                     __pmaintext:	
   424 ;;
   425 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   426 ;;
   427 ;; *************** function _main *****************
   428 ;; Defined at:
   429 ;;		line 35 in file "miniproject.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   438 ;; Tracked objects:
   439 ;;		On entry : B00/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   443 ;;      Params:         0       0       0       0       0
   444 ;;      Locals:         0       0       0       0       0
   445 ;;      Temps:          3       0       0       0       0
   446 ;;      Totals:         3       0       0       0       0
   447 ;;Total ram usage:        3 bytes
   448 ;; Hardware stack levels required when called: 3
   449 ;; This function calls:
   450 ;;		_Lcd_Clear
   451 ;;		_Lcd_Init
   452 ;;		_Lcd_Set_Cursor
   453 ;;		_Lcd_Write_String
   454 ;; This function is called by:
   455 ;;		Startup code after reset
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           
   460                           ;psect for function _main
   461  0685                     _main:
   462  0685                     l930:	
   463                           ;incstack = 0
   464                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   465                           
   466                           
   467                           ;miniproject.c: 37:     TRISA=0X00;
   468  0685  1683               	bsf	3,5	;RP0=1, select bank1
   469  0686  1303               	bcf	3,6	;RP1=0, select bank1
   470  0687  0185               	clrf	5	;volatile
   471  0688                     l932:
   472                           
   473                           ;miniproject.c: 38:     TRISB=0X3F;
   474  0688  303F               	movlw	63
   475  0689  0086               	movwf	6	;volatile
   476  068A                     l934:
   477                           
   478                           ;miniproject.c: 39:     TRISC=0X00;
   479  068A  0187               	clrf	7	;volatile
   480  068B                     l936:
   481                           
   482                           ;miniproject.c: 40:     TRISD=0X00;
   483  068B  0188               	clrf	8	;volatile
   484  068C                     l938:
   485                           
   486                           ;miniproject.c: 42:     OSCCON=0X75;
   487  068C  3075               	movlw	117
   488  068D  008F               	movwf	15	;volatile
   489                           
   490                           ;miniproject.c: 43:     ANSEL=0X00;
   491  068E  1683               	bsf	3,5	;RP0=1, select bank3
   492  068F  1703               	bsf	3,6	;RP1=1, select bank3
   493  0690  0188               	clrf	8	;volatile
   494                           
   495                           ;miniproject.c: 44:     ANSELH=0X00;
   496  0691  0189               	clrf	9	;volatile
   497  0692                     l940:
   498                           
   499                           ;miniproject.c: 46:     PORTBbits.RB0=1;
   500  0692  1283               	bcf	3,5	;RP0=0, select bank0
   501  0693  1303               	bcf	3,6	;RP1=0, select bank0
   502  0694  1406               	bsf	6,0	;volatile
   503  0695                     l942:
   504                           
   505                           ;miniproject.c: 47:     PORTBbits.RB1=1;
   506  0695  1486               	bsf	6,1	;volatile
   507  0696                     l944:
   508                           
   509                           ;miniproject.c: 48:     PORTBbits.RB2=1;
   510  0696  1506               	bsf	6,2	;volatile
   511  0697                     l946:
   512                           
   513                           ;miniproject.c: 50:     PORTBbits.RB3=1;
   514  0697  1586               	bsf	6,3	;volatile
   515  0698                     l948:
   516                           
   517                           ;miniproject.c: 51:     PORTBbits.RB4=1;
   518  0698  1606               	bsf	6,4	;volatile
   519  0699                     l950:
   520                           
   521                           ;miniproject.c: 52:     PORTBbits.RB5=1;
   522  0699  1686               	bsf	6,5	;volatile
   523  069A                     l952:
   524                           
   525                           ;miniproject.c: 53:     PORTBbits.RB6=1;
   526  069A  1706               	bsf	6,6	;volatile
   527  069B                     l954:
   528                           
   529                           ;miniproject.c: 55:     PORTEbits.RE3=1;
   530  069B  1589               	bsf	9,3	;volatile
   531  069C                     l956:
   532                           
   533                           ;miniproject.c: 57:     PORTCbits.RC4=0;
   534  069C  1207               	bcf	7,4	;volatile
   535  069D                     l958:
   536                           
   537                           ;miniproject.c: 58:     PORTCbits.RC5=0;
   538  069D  1287               	bcf	7,5	;volatile
   539  069E                     l960:
   540                           
   541                           ;miniproject.c: 59:     PORTCbits.RC6=0;
   542  069E  1307               	bcf	7,6	;volatile
   543  069F                     l962:
   544                           
   545                           ;miniproject.c: 61:     Lcd_Init();
   546  069F  120A  118A  2628  120A  118A  	fcall	_Lcd_Init
   547  06A4                     l964:
   548                           
   549                           ;miniproject.c: 62:         _delay((unsigned long)((500)*(8000000/4000.0)));
   550  06A4  3006               	movlw	6
   551  06A5  00FD               	movwf	??_main+2
   552  06A6  3013               	movlw	19
   553  06A7  00FC               	movwf	??_main+1
   554  06A8  30AD               	movlw	173
   555  06A9  00FB               	movwf	??_main
   556  06AA                     u307:
   557  06AA  0BFB               	decfsz	??_main,f
   558  06AB  2EAA               	goto	u307
   559  06AC  0BFC               	decfsz	??_main+1,f
   560  06AD  2EAA               	goto	u307
   561  06AE  0BFD               	decfsz	??_main+2,f
   562  06AF  2EAA               	goto	u307
   563  06B0  2EB1               	nop2
   564  06B1                     l966:
   565                           
   566                           ;miniproject.c: 63:     Lcd_Clear();
   567  06B1  120A  118A  252F  120A  118A  	fcall	_Lcd_Clear
   568  06B6                     l968:
   569                           
   570                           ;miniproject.c: 66:     {;miniproject.c: 67:         _delay((unsigned long)((200)*(80000
      +                          00/4000.0)));
   571  06B6  3003               	movlw	3
   572  06B7  00FD               	movwf	??_main+2
   573  06B8  3008               	movlw	8
   574  06B9  00FC               	movwf	??_main+1
   575  06BA  3077               	movlw	119
   576  06BB  00FB               	movwf	??_main
   577  06BC                     u317:
   578  06BC  0BFB               	decfsz	??_main,f
   579  06BD  2EBC               	goto	u317
   580  06BE  0BFC               	decfsz	??_main+1,f
   581  06BF  2EBC               	goto	u317
   582  06C0  0BFD               	decfsz	??_main+2,f
   583  06C1  2EBC               	goto	u317
   584  06C2                     l970:
   585                           
   586                           ;miniproject.c: 68:         Lcd_Clear();
   587  06C2  120A  118A  252F  120A  118A  	fcall	_Lcd_Clear
   588  06C7                     l972:
   589                           
   590                           ;miniproject.c: 69:         Lcd_Set_Cursor(1,1);
   591  06C7  01F4               	clrf	Lcd_Set_Cursor@b
   592  06C8  0AF4               	incf	Lcd_Set_Cursor@b,f
   593  06C9  3001               	movlw	1
   594  06CA  120A  118A  25D6  120A  118A  	fcall	_Lcd_Set_Cursor
   595  06CF                     l974:
   596                           
   597                           ;miniproject.c: 70:         Lcd_Write_String("WELCOME..");
   598  06CF  3026               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   599  06D0  120A  118A  2578  120A  118A  	fcall	_Lcd_Write_String
   600  06D5                     l976:
   601                           
   602                           ;miniproject.c: 72:         if (PORTBbits.RB0==0)
   603  06D5  1283               	bcf	3,5	;RP0=0, select bank0
   604  06D6  1303               	bcf	3,6	;RP1=0, select bank0
   605  06D7  1806               	btfsc	6,0	;volatile
   606  06D8  2EDA               	goto	u231
   607  06D9  2EDB               	goto	u230
   608  06DA                     u231:
   609  06DA  2F00               	goto	l990
   610  06DB                     u230:
   611  06DB                     l978:
   612                           
   613                           ;miniproject.c: 73:         {;miniproject.c: 74:             Lcd_Clear();
   614  06DB  120A  118A  252F  120A  118A  	fcall	_Lcd_Clear
   615                           
   616                           ;miniproject.c: 75:             Lcd_Set_Cursor(1,1);
   617  06E0  01F4               	clrf	Lcd_Set_Cursor@b
   618  06E1  0AF4               	incf	Lcd_Set_Cursor@b,f
   619  06E2  3001               	movlw	1
   620  06E3  120A  118A  25D6  120A  118A  	fcall	_Lcd_Set_Cursor
   621  06E8                     l980:
   622                           
   623                           ;miniproject.c: 76:             Lcd_Write_String("KEEP WARM...");
   624  06E8  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   625  06E9  120A  118A  2578  120A  118A  	fcall	_Lcd_Write_String
   626  06EE                     l982:
   627                           
   628                           ;miniproject.c: 77:             PORTCbits.RC4=1;
   629  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   630  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   631  06F0  1607               	bsf	7,4	;volatile
   632  06F1                     l984:
   633                           
   634                           ;miniproject.c: 78:             PORTCbits.RC5=0;
   635  06F1  1287               	bcf	7,5	;volatile
   636  06F2                     l986:
   637                           
   638                           ;miniproject.c: 79:             PORTCbits.RC6=0;
   639  06F2  1307               	bcf	7,6	;volatile
   640  06F3                     l988:
   641                           
   642                           ;miniproject.c: 80:             _delay((unsigned long)((800)*(8000000/4000.0)));
   643  06F3  3009               	movlw	9
   644  06F4  00FD               	movwf	??_main+2
   645  06F5  301E               	movlw	30
   646  06F6  00FC               	movwf	??_main+1
   647  06F7  30E4               	movlw	228
   648  06F8  00FB               	movwf	??_main
   649  06F9                     u327:
   650  06F9  0BFB               	decfsz	??_main,f
   651  06FA  2EF9               	goto	u327
   652  06FB  0BFC               	decfsz	??_main+1,f
   653  06FC  2EF9               	goto	u327
   654  06FD  0BFD               	decfsz	??_main+2,f
   655  06FE  2EF9               	goto	u327
   656  06FF  0000               	nop
   657  0700                     l990:
   658                           
   659                           ;miniproject.c: 83:         if (PORTBbits.RB1==0)
   660  0700  1283               	bcf	3,5	;RP0=0, select bank0
   661  0701  1303               	bcf	3,6	;RP1=0, select bank0
   662  0702  1886               	btfsc	6,1	;volatile
   663  0703  2F05               	goto	u241
   664  0704  2F06               	goto	u240
   665  0705                     u241:
   666  0705  2F2B               	goto	l1004
   667  0706                     u240:
   668  0706                     l992:
   669                           
   670                           ;miniproject.c: 84:         {;miniproject.c: 85:             Lcd_Clear();
   671  0706  120A  118A  252F  120A  118A  	fcall	_Lcd_Clear
   672                           
   673                           ;miniproject.c: 86:             Lcd_Set_Cursor(1,1);
   674  070B  01F4               	clrf	Lcd_Set_Cursor@b
   675  070C  0AF4               	incf	Lcd_Set_Cursor@b,f
   676  070D  3001               	movlw	1
   677  070E  120A  118A  25D6  120A  118A  	fcall	_Lcd_Set_Cursor
   678  0713                     l994:
   679                           
   680                           ;miniproject.c: 87:             Lcd_Write_String("KEEP WARM...");
   681  0713  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   682  0714  120A  118A  2578  120A  118A  	fcall	_Lcd_Write_String
   683  0719                     l996:
   684                           
   685                           ;miniproject.c: 88:             PORTCbits.RC4=1;
   686  0719  1283               	bcf	3,5	;RP0=0, select bank0
   687  071A  1303               	bcf	3,6	;RP1=0, select bank0
   688  071B  1607               	bsf	7,4	;volatile
   689  071C                     l998:
   690                           
   691                           ;miniproject.c: 89:             PORTCbits.RC5=0;
   692  071C  1287               	bcf	7,5	;volatile
   693  071D                     l1000:
   694                           
   695                           ;miniproject.c: 90:             PORTCbits.RC6=0;
   696  071D  1307               	bcf	7,6	;volatile
   697  071E                     l1002:
   698                           
   699                           ;miniproject.c: 91:             _delay((unsigned long)((800)*(8000000/4000.0)));
   700  071E  3009               	movlw	9
   701  071F  00FD               	movwf	??_main+2
   702  0720  301E               	movlw	30
   703  0721  00FC               	movwf	??_main+1
   704  0722  30E4               	movlw	228
   705  0723  00FB               	movwf	??_main
   706  0724                     u337:
   707  0724  0BFB               	decfsz	??_main,f
   708  0725  2F24               	goto	u337
   709  0726  0BFC               	decfsz	??_main+1,f
   710  0727  2F24               	goto	u337
   711  0728  0BFD               	decfsz	??_main+2,f
   712  0729  2F24               	goto	u337
   713  072A  0000               	nop
   714  072B                     l1004:
   715                           
   716                           ;miniproject.c: 94:         if (PORTBbits.RB2==0)
   717  072B  1283               	bcf	3,5	;RP0=0, select bank0
   718  072C  1303               	bcf	3,6	;RP1=0, select bank0
   719  072D  1906               	btfsc	6,2	;volatile
   720  072E  2F30               	goto	u251
   721  072F  2F31               	goto	u250
   722  0730                     u251:
   723  0730  2F56               	goto	l1018
   724  0731                     u250:
   725  0731                     l1006:
   726                           
   727                           ;miniproject.c: 95:         {;miniproject.c: 96:             Lcd_Clear();
   728  0731  120A  118A  252F  120A  118A  	fcall	_Lcd_Clear
   729                           
   730                           ;miniproject.c: 97:             Lcd_Set_Cursor(1,1);
   731  0736  01F4               	clrf	Lcd_Set_Cursor@b
   732  0737  0AF4               	incf	Lcd_Set_Cursor@b,f
   733  0738  3001               	movlw	1
   734  0739  120A  118A  25D6  120A  118A  	fcall	_Lcd_Set_Cursor
   735  073E                     l1008:
   736                           
   737                           ;miniproject.c: 98:             Lcd_Write_String("BOILING...");
   738  073E  301B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   739  073F  120A  118A  2578  120A  118A  	fcall	_Lcd_Write_String
   740  0744                     l1010:
   741                           
   742                           ;miniproject.c: 99:             PORTCbits.RC4=0;
   743  0744  1283               	bcf	3,5	;RP0=0, select bank0
   744  0745  1303               	bcf	3,6	;RP1=0, select bank0
   745  0746  1207               	bcf	7,4	;volatile
   746  0747                     l1012:
   747                           
   748                           ;miniproject.c: 100:             PORTCbits.RC5=1;
   749  0747  1687               	bsf	7,5	;volatile
   750  0748                     l1014:
   751                           
   752                           ;miniproject.c: 101:             PORTCbits.RC6=0;
   753  0748  1307               	bcf	7,6	;volatile
   754  0749                     l1016:
   755                           
   756                           ;miniproject.c: 102:             _delay((unsigned long)((800)*(8000000/4000.0)));
   757  0749  3009               	movlw	9
   758  074A  00FD               	movwf	??_main+2
   759  074B  301E               	movlw	30
   760  074C  00FC               	movwf	??_main+1
   761  074D  30E4               	movlw	228
   762  074E  00FB               	movwf	??_main
   763  074F                     u347:
   764  074F  0BFB               	decfsz	??_main,f
   765  0750  2F4F               	goto	u347
   766  0751  0BFC               	decfsz	??_main+1,f
   767  0752  2F4F               	goto	u347
   768  0753  0BFD               	decfsz	??_main+2,f
   769  0754  2F4F               	goto	u347
   770  0755  0000               	nop
   771  0756                     l1018:
   772                           
   773                           ;miniproject.c: 105:         if(PORTBbits.RB3==0)
   774  0756  1283               	bcf	3,5	;RP0=0, select bank0
   775  0757  1303               	bcf	3,6	;RP1=0, select bank0
   776  0758  1986               	btfsc	6,3	;volatile
   777  0759  2F5B               	goto	u261
   778  075A  2F5C               	goto	u260
   779  075B                     u261:
   780  075B  2F81               	goto	l1032
   781  075C                     u260:
   782  075C                     l1020:
   783                           
   784                           ;miniproject.c: 106:         {;miniproject.c: 107:             Lcd_Clear();
   785  075C  120A  118A  252F  120A  118A  	fcall	_Lcd_Clear
   786                           
   787                           ;miniproject.c: 108:             Lcd_Set_Cursor(1,1);
   788  0761  01F4               	clrf	Lcd_Set_Cursor@b
   789  0762  0AF4               	incf	Lcd_Set_Cursor@b,f
   790  0763  3001               	movlw	1
   791  0764  120A  118A  25D6  120A  118A  	fcall	_Lcd_Set_Cursor
   792  0769                     l1022:
   793                           
   794                           ;miniproject.c: 109:             Lcd_Write_String("BOILING..");
   795  0769  3030               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   796  076A  120A  118A  2578  120A  118A  	fcall	_Lcd_Write_String
   797  076F                     l1024:
   798                           
   799                           ;miniproject.c: 110:             PORTCbits.RC4=0;
   800  076F  1283               	bcf	3,5	;RP0=0, select bank0
   801  0770  1303               	bcf	3,6	;RP1=0, select bank0
   802  0771  1207               	bcf	7,4	;volatile
   803  0772                     l1026:
   804                           
   805                           ;miniproject.c: 111:             PORTCbits.RC5=1;
   806  0772  1687               	bsf	7,5	;volatile
   807  0773                     l1028:
   808                           
   809                           ;miniproject.c: 112:             PORTCbits.RC6=0;
   810  0773  1307               	bcf	7,6	;volatile
   811  0774                     l1030:
   812                           
   813                           ;miniproject.c: 113:             _delay((unsigned long)((800)*(8000000/4000.0)));
   814  0774  3009               	movlw	9
   815  0775  00FD               	movwf	??_main+2
   816  0776  301E               	movlw	30
   817  0777  00FC               	movwf	??_main+1
   818  0778  30E4               	movlw	228
   819  0779  00FB               	movwf	??_main
   820  077A                     u357:
   821  077A  0BFB               	decfsz	??_main,f
   822  077B  2F7A               	goto	u357
   823  077C  0BFC               	decfsz	??_main+1,f
   824  077D  2F7A               	goto	u357
   825  077E  0BFD               	decfsz	??_main+2,f
   826  077F  2F7A               	goto	u357
   827  0780  0000               	nop
   828  0781                     l1032:
   829                           
   830                           ;miniproject.c: 116:         if(PORTBbits.RB4==0)
   831  0781  1283               	bcf	3,5	;RP0=0, select bank0
   832  0782  1303               	bcf	3,6	;RP1=0, select bank0
   833  0783  1A06               	btfsc	6,4	;volatile
   834  0784  2F86               	goto	u271
   835  0785  2F87               	goto	u270
   836  0786                     u271:
   837  0786  2FAC               	goto	l1046
   838  0787                     u270:
   839  0787                     l1034:
   840                           
   841                           ;miniproject.c: 117:         {;miniproject.c: 118:             Lcd_Clear();
   842  0787  120A  118A  252F  120A  118A  	fcall	_Lcd_Clear
   843                           
   844                           ;miniproject.c: 119:             Lcd_Set_Cursor(1,1);
   845  078C  01F4               	clrf	Lcd_Set_Cursor@b
   846  078D  0AF4               	incf	Lcd_Set_Cursor@b,f
   847  078E  3001               	movlw	1
   848  078F  120A  118A  25D6  120A  118A  	fcall	_Lcd_Set_Cursor
   849  0794                     l1036:
   850                           
   851                           ;miniproject.c: 120:             Lcd_Write_String("DISPENSING..");
   852  0794  300E               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   853  0795  120A  118A  2578  120A  118A  	fcall	_Lcd_Write_String
   854  079A                     l1038:
   855                           
   856                           ;miniproject.c: 121:             PORTCbits.RC4=1;
   857  079A  1283               	bcf	3,5	;RP0=0, select bank0
   858  079B  1303               	bcf	3,6	;RP1=0, select bank0
   859  079C  1607               	bsf	7,4	;volatile
   860  079D                     l1040:
   861                           
   862                           ;miniproject.c: 122:             PORTCbits.RC5=0;
   863  079D  1287               	bcf	7,5	;volatile
   864  079E                     l1042:
   865                           
   866                           ;miniproject.c: 123:             PORTCbits.RC6=1;
   867  079E  1707               	bsf	7,6	;volatile
   868  079F                     l1044:
   869                           
   870                           ;miniproject.c: 124:             _delay((unsigned long)((800)*(8000000/4000.0)));
   871  079F  3009               	movlw	9
   872  07A0  00FD               	movwf	??_main+2
   873  07A1  301E               	movlw	30
   874  07A2  00FC               	movwf	??_main+1
   875  07A3  30E4               	movlw	228
   876  07A4  00FB               	movwf	??_main
   877  07A5                     u367:
   878  07A5  0BFB               	decfsz	??_main,f
   879  07A6  2FA5               	goto	u367
   880  07A7  0BFC               	decfsz	??_main+1,f
   881  07A8  2FA5               	goto	u367
   882  07A9  0BFD               	decfsz	??_main+2,f
   883  07AA  2FA5               	goto	u367
   884  07AB  0000               	nop
   885  07AC                     l1046:
   886                           
   887                           ;miniproject.c: 127:         if (PORTBbits.RB5==0)
   888  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   889  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   890  07AE  1A86               	btfsc	6,5	;volatile
   891  07AF  2FB1               	goto	u281
   892  07B0  2FB2               	goto	u280
   893  07B1                     u281:
   894  07B1  2FD7               	goto	l1060
   895  07B2                     u280:
   896  07B2                     l1048:
   897                           
   898                           ;miniproject.c: 128:         {;miniproject.c: 129:             Lcd_Clear();
   899  07B2  120A  118A  252F  120A  118A  	fcall	_Lcd_Clear
   900                           
   901                           ;miniproject.c: 130:             Lcd_Set_Cursor(1,1);
   902  07B7  01F4               	clrf	Lcd_Set_Cursor@b
   903  07B8  0AF4               	incf	Lcd_Set_Cursor@b,f
   904  07B9  3001               	movlw	1
   905  07BA  120A  118A  25D6  120A  118A  	fcall	_Lcd_Set_Cursor
   906  07BF                     l1050:
   907                           
   908                           ;miniproject.c: 131:             Lcd_Write_String("DISPENSING..");
   909  07BF  300E               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   910  07C0  120A  118A  2578  120A  118A  	fcall	_Lcd_Write_String
   911  07C5                     l1052:
   912                           
   913                           ;miniproject.c: 132:             PORTCbits.RC4=1;
   914  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   915  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   916  07C7  1607               	bsf	7,4	;volatile
   917  07C8                     l1054:
   918                           
   919                           ;miniproject.c: 133:             PORTCbits.RC5=0;
   920  07C8  1287               	bcf	7,5	;volatile
   921  07C9                     l1056:
   922                           
   923                           ;miniproject.c: 134:             PORTCbits.RC6=1;
   924  07C9  1707               	bsf	7,6	;volatile
   925  07CA                     l1058:
   926                           
   927                           ;miniproject.c: 135:             _delay((unsigned long)((800)*(8000000/4000.0)));
   928  07CA  3009               	movlw	9
   929  07CB  00FD               	movwf	??_main+2
   930  07CC  301E               	movlw	30
   931  07CD  00FC               	movwf	??_main+1
   932  07CE  30E4               	movlw	228
   933  07CF  00FB               	movwf	??_main
   934  07D0                     u377:
   935  07D0  0BFB               	decfsz	??_main,f
   936  07D1  2FD0               	goto	u377
   937  07D2  0BFC               	decfsz	??_main+1,f
   938  07D3  2FD0               	goto	u377
   939  07D4  0BFD               	decfsz	??_main+2,f
   940  07D5  2FD0               	goto	u377
   941  07D6  0000               	nop
   942  07D7                     l1060:
   943                           
   944                           ;miniproject.c: 138:         if (PORTEbits.RE3==0)
   945  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   946  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   947  07D9  1989               	btfsc	9,3	;volatile
   948  07DA  2FDC               	goto	u291
   949  07DB  2FDD               	goto	u290
   950  07DC                     u291:
   951  07DC  2EB6               	goto	l968
   952  07DD                     u290:
   953  07DD                     l1062:
   954                           
   955                           ;miniproject.c: 139:         {;miniproject.c: 140:             Lcd_Clear();
   956  07DD  120A  118A  252F  120A  118A  	fcall	_Lcd_Clear
   957  07E2                     l1064:
   958                           
   959                           ;miniproject.c: 141:             _delay((unsigned long)((1000)*(8000000/4000.0)));
   960  07E2  300B               	movlw	11
   961  07E3  00FD               	movwf	??_main+2
   962  07E4  3026               	movlw	38
   963  07E5  00FC               	movwf	??_main+1
   964  07E6  305D               	movlw	93
   965  07E7  00FB               	movwf	??_main
   966  07E8                     u387:
   967  07E8  0BFB               	decfsz	??_main,f
   968  07E9  2FE8               	goto	u387
   969  07EA  0BFC               	decfsz	??_main+1,f
   970  07EB  2FE8               	goto	u387
   971  07EC  0BFD               	decfsz	??_main+2,f
   972  07ED  2FE8               	goto	u387
   973  07EE  2FEF               	nop2
   974  07EF                     l1066:
   975                           
   976                           ;miniproject.c: 142:             PORTCbits.RC4=0;
   977  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   978  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   979  07F1  1207               	bcf	7,4	;volatile
   980  07F2                     l1068:
   981                           
   982                           ;miniproject.c: 143:             PORTCbits.RC5=0;
   983  07F2  1287               	bcf	7,5	;volatile
   984  07F3                     l1070:
   985                           
   986                           ;miniproject.c: 144:             PORTCbits.RC6=0;
   987  07F3  1307               	bcf	7,6	;volatile
   988  07F4  2EB6               	goto	l968
   989  07F5  120A  118A  2800   	ljmp	start
   990  07F8                     __end_of_main:
   991                           
   992                           	psect	text1
   993  0578                     __ptext1:	
   994 ;; *************** function _Lcd_Write_String *****************
   995 ;; Defined at:
   996 ;;		line 88 in file "./lcd.h"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  a               1    wreg     PTR unsigned char 
   999 ;;		 -> STR_7(13), STR_6(13), STR_5(10), STR_4(11), 
  1000 ;;		 -> STR_3(13), STR_2(13), STR_1(10), 
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  a               1    7[COMMON] PTR unsigned char 
  1003 ;;		 -> STR_7(13), STR_6(13), STR_5(10), STR_4(11), 
  1004 ;;		 -> STR_3(13), STR_2(13), STR_1(10), 
  1005 ;;  i               2    5[COMMON] int 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1015 ;;      Params:         0       0       0       0       0
  1016 ;;      Locals:         3       0       0       0       0
  1017 ;;      Temps:          0       0       0       0       0
  1018 ;;      Totals:         3       0       0       0       0
  1019 ;;Total ram usage:        3 bytes
  1020 ;; Hardware stack levels used: 1
  1021 ;; Hardware stack levels required when called: 2
  1022 ;; This function calls:
  1023 ;;		_Lcd_Write_Char
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function _Lcd_Write_String
  1031  0578                     _Lcd_Write_String:
  1032                           
  1033                           ;incstack = 0
  1034                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1035                           ;Lcd_Write_String@a stored from wreg
  1036  0578  00F7               	movwf	Lcd_Write_String@a
  1037  0579                     l922:
  1038                           
  1039                           ;./lcd.h: 89: int i;;./lcd.h: 90: for(i=0;a[i]!='\0';i++)
  1040  0579  01F5               	clrf	Lcd_Write_String@i
  1041  057A  01F6               	clrf	Lcd_Write_String@i+1
  1042  057B  2D8F               	goto	l928
  1043  057C                     l924:
  1044                           
  1045                           ;./lcd.h: 91:  Lcd_Write_Char(a[i]);
  1046  057C  0875               	movf	Lcd_Write_String@i,w
  1047  057D  0777               	addwf	Lcd_Write_String@a,w
  1048  057E  0084               	movwf	4
  1049  057F  120A  118A  2003  120A  118A  	fcall	stringdir
  1050  0584  120A  118A  259D  120A  118A  	fcall	_Lcd_Write_Char
  1051  0589                     l926:
  1052  0589  3001               	movlw	1
  1053  058A  07F5               	addwf	Lcd_Write_String@i,f
  1054  058B  1803               	skipnc
  1055  058C  0AF6               	incf	Lcd_Write_String@i+1,f
  1056  058D  3000               	movlw	0
  1057  058E  07F6               	addwf	Lcd_Write_String@i+1,f
  1058  058F                     l928:
  1059  058F  0875               	movf	Lcd_Write_String@i,w
  1060  0590  0777               	addwf	Lcd_Write_String@a,w
  1061  0591  0084               	movwf	4
  1062  0592  120A  118A  2003  120A  118A  	fcall	stringdir
  1063  0597  3A00               	xorlw	0
  1064  0598  1D03               	skipz
  1065  0599  2D9B               	goto	u221
  1066  059A  2D9C               	goto	u220
  1067  059B                     u221:
  1068  059B  2D7C               	goto	l924
  1069  059C                     u220:
  1070  059C                     l61:
  1071  059C  0008               	return
  1072  059D                     __end_of_Lcd_Write_String:
  1073                           
  1074                           	psect	text2
  1075  059D                     __ptext2:	
  1076 ;; *************** function _Lcd_Write_Char *****************
  1077 ;; Defined at:
  1078 ;;		line 73 in file "./lcd.h"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  a               1    wreg     unsigned char 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  a               1    4[COMMON] unsigned char 
  1083 ;;  y               1    3[COMMON] unsigned char 
  1084 ;;  temp            1    2[COMMON] unsigned char 
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      void 
  1087 ;; Registers used:
  1088 ;;		wreg, status,2, status,0, pclath, cstack
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1094 ;;      Params:         0       0       0       0       0
  1095 ;;      Locals:         3       0       0       0       0
  1096 ;;      Temps:          1       0       0       0       0
  1097 ;;      Totals:         4       0       0       0       0
  1098 ;;Total ram usage:        4 bytes
  1099 ;; Hardware stack levels used: 1
  1100 ;; Hardware stack levels required when called: 1
  1101 ;; This function calls:
  1102 ;;		_Lcd_Port
  1103 ;; This function is called by:
  1104 ;;		_Lcd_Write_String
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function _Lcd_Write_Char
  1110  059D                     _Lcd_Write_Char:
  1111                           
  1112                           ;incstack = 0
  1113                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1114                           ;Lcd_Write_Char@a stored from wreg
  1115  059D  00F4               	movwf	Lcd_Write_Char@a
  1116  059E                     l696:
  1117                           
  1118                           ;./lcd.h: 74:  char temp,y;;./lcd.h: 75:  temp = a&0x0F;
  1119  059E  0874               	movf	Lcd_Write_Char@a,w
  1120  059F  390F               	andlw	15
  1121  05A0  00F1               	movwf	??_Lcd_Write_Char
  1122  05A1  0871               	movf	??_Lcd_Write_Char,w
  1123  05A2  00F2               	movwf	Lcd_Write_Char@temp
  1124                           
  1125                           ;./lcd.h: 76:  y = a&0xF0;
  1126  05A3  0874               	movf	Lcd_Write_Char@a,w
  1127  05A4  39F0               	andlw	240
  1128  05A5  00F1               	movwf	??_Lcd_Write_Char
  1129  05A6  0871               	movf	??_Lcd_Write_Char,w
  1130  05A7  00F3               	movwf	Lcd_Write_Char@y
  1131  05A8                     l698:
  1132                           
  1133                           ;./lcd.h: 77:  PORTAbits.RA0 = 1;
  1134  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  1135  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  1136  05AA  1405               	bsf	5,0	;volatile
  1137  05AB                     l700:
  1138                           
  1139                           ;./lcd.h: 78:  Lcd_Port(y>>4);
  1140  05AB  0873               	movf	Lcd_Write_Char@y,w
  1141  05AC  00F1               	movwf	??_Lcd_Write_Char
  1142  05AD  3004               	movlw	4
  1143  05AE                     u55:
  1144  05AE  1003               	clrc
  1145  05AF  0CF1               	rrf	??_Lcd_Write_Char,f
  1146  05B0  3EFF               	addlw	-1
  1147  05B1  1D03               	skipz
  1148  05B2  2DAE               	goto	u55
  1149  05B3  0871               	movf	??_Lcd_Write_Char,w
  1150  05B4  120A  118A  2556  120A  118A  	fcall	_Lcd_Port
  1151  05B9                     l702:
  1152                           
  1153                           ;./lcd.h: 79:  PORTAbits.RA1 = 1;
  1154  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  1155  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  1156  05BB  1485               	bsf	5,1	;volatile
  1157  05BC                     l704:
  1158                           
  1159                           ;./lcd.h: 80:  _delay((unsigned long)((40)*(8000000/4000000.0)));
  1160  05BC  301A               	movlw	26
  1161  05BD  00F1               	movwf	??_Lcd_Write_Char
  1162  05BE                     u397:
  1163  05BE  0BF1               	decfsz	??_Lcd_Write_Char,f
  1164  05BF  2DBE               	goto	u397
  1165  05C0  0000               	nop
  1166  05C1                     l706:
  1167                           
  1168                           ;./lcd.h: 81:  PORTAbits.RA1 = 0;
  1169  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1170  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1171  05C3  1085               	bcf	5,1	;volatile
  1172  05C4                     l708:
  1173                           
  1174                           ;./lcd.h: 82:  Lcd_Port(temp);
  1175  05C4  0872               	movf	Lcd_Write_Char@temp,w
  1176  05C5  120A  118A  2556  120A  118A  	fcall	_Lcd_Port
  1177  05CA                     l710:
  1178                           
  1179                           ;./lcd.h: 83:  PORTAbits.RA1 = 1;
  1180  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1181  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1182  05CC  1485               	bsf	5,1	;volatile
  1183  05CD                     l712:
  1184                           
  1185                           ;./lcd.h: 84:  _delay((unsigned long)((40)*(8000000/4000000.0)));
  1186  05CD  301A               	movlw	26
  1187  05CE  00F1               	movwf	??_Lcd_Write_Char
  1188  05CF                     u407:
  1189  05CF  0BF1               	decfsz	??_Lcd_Write_Char,f
  1190  05D0  2DCF               	goto	u407
  1191  05D1  0000               	nop
  1192  05D2                     l714:
  1193                           
  1194                           ;./lcd.h: 85:  PORTAbits.RA1 = 0;
  1195  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  1196  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  1197  05D4  1085               	bcf	5,1	;volatile
  1198  05D5                     l55:
  1199  05D5  0008               	return
  1200  05D6                     __end_of_Lcd_Write_Char:
  1201                           
  1202                           	psect	text3
  1203  05D6                     __ptext3:	
  1204 ;; *************** function _Lcd_Set_Cursor *****************
  1205 ;; Defined at:
  1206 ;;		line 36 in file "./lcd.h"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  a               1    wreg     unsigned char 
  1209 ;;  b               1    4[COMMON] unsigned char 
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  a               1    7[COMMON] unsigned char 
  1212 ;;  temp            1   10[COMMON] unsigned char 
  1213 ;;  y               1    9[COMMON] unsigned char 
  1214 ;;  z               1    8[COMMON] unsigned char 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1224 ;;      Params:         1       0       0       0       0
  1225 ;;      Locals:         4       0       0       0       0
  1226 ;;      Temps:          2       0       0       0       0
  1227 ;;      Totals:         7       0       0       0       0
  1228 ;;Total ram usage:        7 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; Hardware stack levels required when called: 2
  1231 ;; This function calls:
  1232 ;;		_Lcd_Cmd
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function _Lcd_Set_Cursor
  1240  05D6                     _Lcd_Set_Cursor:
  1241                           
  1242                           ;incstack = 0
  1243                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1244                           ;Lcd_Set_Cursor@a stored from wreg
  1245  05D6  00F7               	movwf	Lcd_Set_Cursor@a
  1246  05D7                     l902:
  1247                           
  1248                           ;./lcd.h: 36: void Lcd_Set_Cursor(char a, char b);./lcd.h: 37: {;./lcd.h: 38:   char tem
      +                          p,z,y;;./lcd.h: 39:   if(a == 1)
  1249  05D7  0377               	decf	Lcd_Set_Cursor@a,w
  1250  05D8  1D03               	btfss	3,2
  1251  05D9  2DDB               	goto	u181
  1252  05DA  2DDC               	goto	u180
  1253  05DB                     u181:
  1254  05DB  2DFF               	goto	l912
  1255  05DC                     u180:
  1256  05DC                     l904:
  1257                           
  1258                           ;./lcd.h: 40:   {;./lcd.h: 41:    temp = 0x80 + b - 1;
  1259  05DC  0874               	movf	Lcd_Set_Cursor@b,w
  1260  05DD  3E7F               	addlw	127
  1261  05DE  00F5               	movwf	??_Lcd_Set_Cursor
  1262  05DF  0875               	movf	??_Lcd_Set_Cursor,w
  1263  05E0  00FA               	movwf	Lcd_Set_Cursor@temp
  1264                           
  1265                           ;./lcd.h: 42:    z = temp>>4;
  1266  05E1  087A               	movf	Lcd_Set_Cursor@temp,w
  1267  05E2  00F5               	movwf	??_Lcd_Set_Cursor
  1268  05E3  3004               	movlw	4
  1269  05E4                     u195:
  1270  05E4  1003               	clrc
  1271  05E5  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1272  05E6  3EFF               	addlw	-1
  1273  05E7  1D03               	skipz
  1274  05E8  2DE4               	goto	u195
  1275  05E9  0875               	movf	??_Lcd_Set_Cursor,w
  1276  05EA  00F6               	movwf	??_Lcd_Set_Cursor+1
  1277  05EB  0876               	movf	??_Lcd_Set_Cursor+1,w
  1278  05EC  00F8               	movwf	Lcd_Set_Cursor@z
  1279  05ED                     l906:
  1280                           
  1281                           ;./lcd.h: 43:    y = temp & 0x0F;
  1282  05ED  087A               	movf	Lcd_Set_Cursor@temp,w
  1283  05EE  390F               	andlw	15
  1284  05EF  00F5               	movwf	??_Lcd_Set_Cursor
  1285  05F0  0875               	movf	??_Lcd_Set_Cursor,w
  1286  05F1  00F9               	movwf	Lcd_Set_Cursor@y
  1287  05F2                     l908:
  1288                           
  1289                           ;./lcd.h: 44:    Lcd_Cmd(z);
  1290  05F2  0878               	movf	Lcd_Set_Cursor@z,w
  1291  05F3  120A  118A  253C  120A  118A  	fcall	_Lcd_Cmd
  1292  05F8                     l910:
  1293                           
  1294                           ;./lcd.h: 45:    Lcd_Cmd(y);
  1295  05F8  0879               	movf	Lcd_Set_Cursor@y,w
  1296  05F9  120A  118A  253C  120A  118A  	fcall	_Lcd_Cmd
  1297                           
  1298                           ;./lcd.h: 46:   }
  1299  05FE  2E27               	goto	l49
  1300  05FF                     l912:
  1301  05FF  3002               	movlw	2
  1302  0600  0677               	xorwf	Lcd_Set_Cursor@a,w
  1303  0601  1D03               	btfss	3,2
  1304  0602  2E04               	goto	u201
  1305  0603  2E05               	goto	u200
  1306  0604                     u201:
  1307  0604  2E27               	goto	l49
  1308  0605                     u200:
  1309  0605                     l914:
  1310                           
  1311                           ;./lcd.h: 48:   {;./lcd.h: 49:    temp = 0xC0 + b - 1;
  1312  0605  0874               	movf	Lcd_Set_Cursor@b,w
  1313  0606  3EBF               	addlw	191
  1314  0607  00F5               	movwf	??_Lcd_Set_Cursor
  1315  0608  0875               	movf	??_Lcd_Set_Cursor,w
  1316  0609  00FA               	movwf	Lcd_Set_Cursor@temp
  1317                           
  1318                           ;./lcd.h: 50:    z = temp>>4;
  1319  060A  087A               	movf	Lcd_Set_Cursor@temp,w
  1320  060B  00F5               	movwf	??_Lcd_Set_Cursor
  1321  060C  3004               	movlw	4
  1322  060D                     u215:
  1323  060D  1003               	clrc
  1324  060E  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1325  060F  3EFF               	addlw	-1
  1326  0610  1D03               	skipz
  1327  0611  2E0D               	goto	u215
  1328  0612  0875               	movf	??_Lcd_Set_Cursor,w
  1329  0613  00F6               	movwf	??_Lcd_Set_Cursor+1
  1330  0614  0876               	movf	??_Lcd_Set_Cursor+1,w
  1331  0615  00F8               	movwf	Lcd_Set_Cursor@z
  1332  0616                     l916:
  1333                           
  1334                           ;./lcd.h: 51:    y = temp & 0x0F;
  1335  0616  087A               	movf	Lcd_Set_Cursor@temp,w
  1336  0617  390F               	andlw	15
  1337  0618  00F5               	movwf	??_Lcd_Set_Cursor
  1338  0619  0875               	movf	??_Lcd_Set_Cursor,w
  1339  061A  00F9               	movwf	Lcd_Set_Cursor@y
  1340  061B                     l918:
  1341                           
  1342                           ;./lcd.h: 52:    Lcd_Cmd(z);
  1343  061B  0878               	movf	Lcd_Set_Cursor@z,w
  1344  061C  120A  118A  253C  120A  118A  	fcall	_Lcd_Cmd
  1345  0621                     l920:
  1346                           
  1347                           ;./lcd.h: 53:    Lcd_Cmd(y);
  1348  0621  0879               	movf	Lcd_Set_Cursor@y,w
  1349  0622  120A  118A  253C  120A  118A  	fcall	_Lcd_Cmd
  1350  0627                     l49:
  1351  0627  0008               	return
  1352  0628                     __end_of_Lcd_Set_Cursor:
  1353                           
  1354                           	psect	text4
  1355  0628                     __ptext4:	
  1356 ;; *************** function _Lcd_Init *****************
  1357 ;; Defined at:
  1358 ;;		line 57 in file "./lcd.h"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0, pclath, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1372 ;;      Params:         0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0
  1374 ;;      Temps:          2       0       0       0       0
  1375 ;;      Totals:         2       0       0       0       0
  1376 ;;Total ram usage:        2 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; Hardware stack levels required when called: 2
  1379 ;; This function calls:
  1380 ;;		_Lcd_Cmd
  1381 ;;		_Lcd_Port
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           
  1388                           ;psect for function _Lcd_Init
  1389  0628                     _Lcd_Init:
  1390  0628                     l738:	
  1391                           ;incstack = 0
  1392                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1393                           
  1394                           
  1395                           ;./lcd.h: 58:  Lcd_Port(0x00);
  1396  0628  3000               	movlw	0
  1397  0629  120A  118A  2556  120A  118A  	fcall	_Lcd_Port
  1398  062E                     l740:
  1399                           
  1400                           ;./lcd.h: 59:  _delay((unsigned long)((20)*(8000000/4000.0)));
  1401  062E  3034               	movlw	52
  1402  062F  00F5               	movwf	??_Lcd_Init+1
  1403  0630  30F1               	movlw	241
  1404  0631  00F4               	movwf	??_Lcd_Init
  1405  0632                     u417:
  1406  0632  0BF4               	decfsz	??_Lcd_Init,f
  1407  0633  2E32               	goto	u417
  1408  0634  0BF5               	decfsz	??_Lcd_Init+1,f
  1409  0635  2E32               	goto	u417
  1410  0636  2E37               	nop2
  1411  0637                     l742:
  1412                           
  1413                           ;./lcd.h: 60:  Lcd_Cmd(0x03);
  1414  0637  3003               	movlw	3
  1415  0638  120A  118A  253C  120A  118A  	fcall	_Lcd_Cmd
  1416                           
  1417                           ;./lcd.h: 61:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1418  063D  300D               	movlw	13
  1419  063E  00F5               	movwf	??_Lcd_Init+1
  1420  063F  30FB               	movlw	251
  1421  0640  00F4               	movwf	??_Lcd_Init
  1422  0641                     u427:
  1423  0641  0BF4               	decfsz	??_Lcd_Init,f
  1424  0642  2E41               	goto	u427
  1425  0643  0BF5               	decfsz	??_Lcd_Init+1,f
  1426  0644  2E41               	goto	u427
  1427  0645  2E46               	nop2
  1428  0646                     l744:
  1429                           
  1430                           ;./lcd.h: 62:  Lcd_Cmd(0x03);
  1431  0646  3003               	movlw	3
  1432  0647  120A  118A  253C  120A  118A  	fcall	_Lcd_Cmd
  1433  064C                     l746:
  1434                           
  1435                           ;./lcd.h: 63:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1436  064C  301D               	movlw	29
  1437  064D  00F5               	movwf	??_Lcd_Init+1
  1438  064E  3091               	movlw	145
  1439  064F  00F4               	movwf	??_Lcd_Init
  1440  0650                     u437:
  1441  0650  0BF4               	decfsz	??_Lcd_Init,f
  1442  0651  2E50               	goto	u437
  1443  0652  0BF5               	decfsz	??_Lcd_Init+1,f
  1444  0653  2E50               	goto	u437
  1445                           
  1446                           ;./lcd.h: 64:  Lcd_Cmd(0x03);
  1447  0654  3003               	movlw	3
  1448  0655  120A  118A  253C  120A  118A  	fcall	_Lcd_Cmd
  1449                           
  1450                           ;./lcd.h: 65:  Lcd_Cmd(0x02);
  1451  065A  3002               	movlw	2
  1452  065B  120A  118A  253C  120A  118A  	fcall	_Lcd_Cmd
  1453                           
  1454                           ;./lcd.h: 66:  Lcd_Cmd(0x02);
  1455  0660  3002               	movlw	2
  1456  0661  120A  118A  253C  120A  118A  	fcall	_Lcd_Cmd
  1457                           
  1458                           ;./lcd.h: 67:  Lcd_Cmd(0x08);
  1459  0666  3008               	movlw	8
  1460  0667  120A  118A  253C  120A  118A  	fcall	_Lcd_Cmd
  1461                           
  1462                           ;./lcd.h: 68:  Lcd_Cmd(0x00);
  1463  066C  3000               	movlw	0
  1464  066D  120A  118A  253C  120A  118A  	fcall	_Lcd_Cmd
  1465                           
  1466                           ;./lcd.h: 69:  Lcd_Cmd(0x0C);
  1467  0672  300C               	movlw	12
  1468  0673  120A  118A  253C  120A  118A  	fcall	_Lcd_Cmd
  1469                           
  1470                           ;./lcd.h: 70:  Lcd_Cmd(0x00);
  1471  0678  3000               	movlw	0
  1472  0679  120A  118A  253C  120A  118A  	fcall	_Lcd_Cmd
  1473                           
  1474                           ;./lcd.h: 71:  Lcd_Cmd(0x06);
  1475  067E  3006               	movlw	6
  1476  067F  120A  118A  253C  120A  118A  	fcall	_Lcd_Cmd
  1477  0684                     l52:
  1478  0684  0008               	return
  1479  0685                     __end_of_Lcd_Init:
  1480                           
  1481                           	psect	text5
  1482  052F                     __ptext5:	
  1483 ;; *************** function _Lcd_Clear *****************
  1484 ;; Defined at:
  1485 ;;		line 30 in file "./lcd.h"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  2   42[None  ] int 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0, pclath, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1499 ;;      Params:         0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used: 1
  1505 ;; Hardware stack levels required when called: 2
  1506 ;; This function calls:
  1507 ;;		_Lcd_Cmd
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           
  1514                           ;psect for function _Lcd_Clear
  1515  052F                     _Lcd_Clear:
  1516  052F                     l716:	
  1517                           ;incstack = 0
  1518                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1519                           
  1520                           
  1521                           ;./lcd.h: 32:  Lcd_Cmd(0);
  1522  052F  3000               	movlw	0
  1523  0530  120A  118A  253C  120A  118A  	fcall	_Lcd_Cmd
  1524                           
  1525                           ;./lcd.h: 33:  Lcd_Cmd(1);
  1526  0535  3001               	movlw	1
  1527  0536  120A  118A  253C  120A  118A  	fcall	_Lcd_Cmd
  1528  053B                     l43:
  1529  053B  0008               	return
  1530  053C                     __end_of_Lcd_Clear:
  1531                           
  1532                           	psect	text6
  1533  053C                     __ptext6:	
  1534 ;; *************** function _Lcd_Cmd *****************
  1535 ;; Defined at:
  1536 ;;		line 21 in file "./lcd.h"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  a               1    wreg     unsigned char 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  a               1    3[COMMON] unsigned char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0, pclath, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1550 ;;      Params:         0       0       0       0       0
  1551 ;;      Locals:         1       0       0       0       0
  1552 ;;      Temps:          2       0       0       0       0
  1553 ;;      Totals:         3       0       0       0       0
  1554 ;;Total ram usage:        3 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; Hardware stack levels required when called: 1
  1557 ;; This function calls:
  1558 ;;		_Lcd_Port
  1559 ;; This function is called by:
  1560 ;;		_Lcd_Clear
  1561 ;;		_Lcd_Set_Cursor
  1562 ;;		_Lcd_Init
  1563 ;;		_Lcd_Shift_Right
  1564 ;;		_Lcd_Shift_Left
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           
  1569                           ;psect for function _Lcd_Cmd
  1570  053C                     _Lcd_Cmd:
  1571                           
  1572                           ;incstack = 0
  1573                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1574                           ;Lcd_Cmd@a stored from wreg
  1575  053C  00F3               	movwf	Lcd_Cmd@a
  1576  053D                     l686:
  1577                           
  1578                           ;./lcd.h: 21: void Lcd_Cmd(char a);./lcd.h: 22: {;./lcd.h: 23:  PORTAbits.RA0 = 0;
  1579  053D  1283               	bcf	3,5	;RP0=0, select bank0
  1580  053E  1303               	bcf	3,6	;RP1=0, select bank0
  1581  053F  1005               	bcf	5,0	;volatile
  1582  0540                     l688:
  1583                           
  1584                           ;./lcd.h: 24:  Lcd_Port(a);
  1585  0540  0873               	movf	Lcd_Cmd@a,w
  1586  0541  120A  118A  2556  120A  118A  	fcall	_Lcd_Port
  1587  0546                     l690:
  1588                           
  1589                           ;./lcd.h: 25:  PORTAbits.RA1 = 1;
  1590  0546  1283               	bcf	3,5	;RP0=0, select bank0
  1591  0547  1303               	bcf	3,6	;RP1=0, select bank0
  1592  0548  1485               	bsf	5,1	;volatile
  1593  0549                     l692:
  1594                           
  1595                           ;./lcd.h: 26:  _delay((unsigned long)((4)*(8000000/4000.0)));
  1596  0549  300B               	movlw	11
  1597  054A  00F2               	movwf	??_Lcd_Cmd+1
  1598  054B  3062               	movlw	98
  1599  054C  00F1               	movwf	??_Lcd_Cmd
  1600  054D                     u447:
  1601  054D  0BF1               	decfsz	??_Lcd_Cmd,f
  1602  054E  2D4D               	goto	u447
  1603  054F  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1604  0550  2D4D               	goto	u447
  1605  0551  0000               	nop
  1606  0552                     l694:
  1607                           
  1608                           ;./lcd.h: 27:  PORTAbits.RA1 = 0;
  1609  0552  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0553  1303               	bcf	3,6	;RP1=0, select bank0
  1611  0554  1085               	bcf	5,1	;volatile
  1612  0555                     l40:
  1613  0555  0008               	return
  1614  0556                     __end_of_Lcd_Cmd:
  1615                           
  1616                           	psect	text7
  1617  0556                     __ptext7:	
  1618 ;; *************** function _Lcd_Port *****************
  1619 ;; Defined at:
  1620 ;;		line 1 in file "./lcd.h"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  a               1    wreg     unsigned char 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  a               1    0[COMMON] unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1634 ;;      Params:         0       0       0       0       0
  1635 ;;      Locals:         1       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0
  1637 ;;      Totals:         1       0       0       0       0
  1638 ;;Total ram usage:        1 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		_Lcd_Cmd
  1644 ;;		_Lcd_Init
  1645 ;;		_Lcd_Write_Char
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           
  1650                           ;psect for function _Lcd_Port
  1651  0556                     _Lcd_Port:
  1652                           
  1653                           ;incstack = 0
  1654                           ; Regs used in _Lcd_Port: [wreg]
  1655                           ;Lcd_Port@a stored from wreg
  1656  0556  00F0               	movwf	Lcd_Port@a
  1657  0557                     l676:
  1658                           
  1659                           ;./lcd.h: 1: void Lcd_Port(char a);./lcd.h: 2: {;./lcd.h: 3:  if(a & 1)
  1660  0557  1C70               	btfss	Lcd_Port@a,0
  1661  0558  2D5A               	goto	u11
  1662  0559  2D5B               	goto	u10
  1663  055A                     u11:
  1664  055A  2D5F               	goto	l29
  1665  055B                     u10:
  1666  055B                     l678:
  1667                           
  1668                           ;./lcd.h: 4:   PORTDbits.RD4 = 1;
  1669  055B  1283               	bcf	3,5	;RP0=0, select bank0
  1670  055C  1303               	bcf	3,6	;RP1=0, select bank0
  1671  055D  1608               	bsf	8,4	;volatile
  1672  055E  2D62               	goto	l30
  1673  055F                     l29:	
  1674                           ;./lcd.h: 5:  else
  1675                           
  1676                           
  1677                           ;./lcd.h: 6:   PORTDbits.RD4 = 0;
  1678  055F  1283               	bcf	3,5	;RP0=0, select bank0
  1679  0560  1303               	bcf	3,6	;RP1=0, select bank0
  1680  0561  1208               	bcf	8,4	;volatile
  1681  0562                     l30:
  1682                           
  1683                           ;./lcd.h: 7:  if(a & 2)
  1684  0562  1CF0               	btfss	Lcd_Port@a,1
  1685  0563  2D65               	goto	u21
  1686  0564  2D66               	goto	u20
  1687  0565                     u21:
  1688  0565  2D68               	goto	l31
  1689  0566                     u20:
  1690  0566                     l680:
  1691                           
  1692                           ;./lcd.h: 8:   PORTDbits.RD5 = 1;
  1693  0566  1688               	bsf	8,5	;volatile
  1694  0567  2D69               	goto	l32
  1695  0568                     l31:	
  1696                           ;./lcd.h: 9:  else
  1697                           
  1698                           
  1699                           ;./lcd.h: 10:   PORTDbits.RD5 = 0;
  1700  0568  1288               	bcf	8,5	;volatile
  1701  0569                     l32:
  1702                           
  1703                           ;./lcd.h: 11:  if(a & 4)
  1704  0569  1D70               	btfss	Lcd_Port@a,2
  1705  056A  2D6C               	goto	u31
  1706  056B  2D6D               	goto	u30
  1707  056C                     u31:
  1708  056C  2D6F               	goto	l33
  1709  056D                     u30:
  1710  056D                     l682:
  1711                           
  1712                           ;./lcd.h: 12:   PORTDbits.RD6 = 1;
  1713  056D  1708               	bsf	8,6	;volatile
  1714  056E  2D70               	goto	l34
  1715  056F                     l33:	
  1716                           ;./lcd.h: 13:  else
  1717                           
  1718                           
  1719                           ;./lcd.h: 14:   PORTDbits.RD6 = 0;
  1720  056F  1308               	bcf	8,6	;volatile
  1721  0570                     l34:
  1722                           
  1723                           ;./lcd.h: 15:  if(a & 8)
  1724  0570  1DF0               	btfss	Lcd_Port@a,3
  1725  0571  2D73               	goto	u41
  1726  0572  2D74               	goto	u40
  1727  0573                     u41:
  1728  0573  2D76               	goto	l35
  1729  0574                     u40:
  1730  0574                     l684:
  1731                           
  1732                           ;./lcd.h: 16:   PORTDbits.RD7 = 1;
  1733  0574  1788               	bsf	8,7	;volatile
  1734  0575  2D77               	goto	l37
  1735  0576                     l35:	
  1736                           ;./lcd.h: 17:  else
  1737                           
  1738                           
  1739                           ;./lcd.h: 18:   PORTDbits.RD7 = 0;
  1740  0576  1388               	bcf	8,7	;volatile
  1741  0577                     l37:
  1742  0577  0008               	return
  1743  0578                     __end_of_Lcd_Port:
  1744  007E                     btemp	set	126	;btemp
  1745  007E                     wtemp0	set	126
  1746                           
  1747                           	psect	config
  1748                           
  1749                           ;Config register CONFIG1 @ 0x2007
  1750                           ;	Oscillator Selection bits
  1751                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1752                           ;	Watchdog Timer Enable bit
  1753                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1754                           ;	Power-up Timer Enable bit
  1755                           ;	PWRTE = ON, PWRT enabled
  1756                           ;	RE3/MCLR pin function select bit
  1757                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1758                           ;	Code Protection bit
  1759                           ;	CP = OFF, Program memory code protection is disabled
  1760                           ;	Data Code Protection bit
  1761                           ;	CPD = OFF, Data memory code protection is disabled
  1762                           ;	Brown Out Reset Selection bits
  1763                           ;	BOREN = ON, BOR enabled
  1764                           ;	Internal External Switchover bit
  1765                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1766                           ;	Fail-Safe Clock Monitor Enabled bit
  1767                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1768                           ;	Low Voltage Programming Enable bit
  1769                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1770                           ;	In-Circuit Debugger Mode bit
  1771                           ;	DEBUG = 0x1, unprogrammed default
  1772  2007                     	org	8199
  1773  2007  2FC4               	dw	12228
  1774                           
  1775                           ;Config register CONFIG2 @ 0x2008
  1776                           ;	Brown-out Reset Selection bit
  1777                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1778                           ;	Flash Program Memory Self Write Enable bits
  1779                           ;	WRT = OFF, Write protection off
  1780  2008                     	org	8200
  1781  2008  3FFF               	dw	16383

Data Sizes:
    Strings     57
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_7(CODE[13]), STR_6(CODE[13]), STR_5(CODE[10]), STR_4(CODE[11]), 
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1528
                                             11 COMMON     3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     441
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     120
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     877
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      75
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jan 28 22:44:11 2022

                        _i 0020                          pc 0002                         l30 0562  
                       l31 0568                         l32 0569                         l40 0555  
                       l33 056F                         l34 0570                         l35 0576  
                       l43 053B                         l52 0684                         l37 0577  
                       l29 055F                         l61 059C                         l55 05D5  
                       l49 0627                         u10 055B                         u11 055A  
                       u20 0566                         u21 0565                         u30 056D  
                       u31 056C                         u40 0574                         u41 0573  
                       u55 05AE                         fsr 0004                        l700 05AB  
                      l710 05CA                        l702 05B9                        l712 05CD  
                      l704 05BC                        l714 05D2                        l706 05C1  
                      l716 052F                        l740 062E                        l708 05C4  
                      l742 0637                        l910 05F8                        l902 05D7  
                      l680 0566                        l744 0646                        l920 0621  
                      l904 05DC                        l912 05FF                        l682 056D  
                      l690 0546                        l746 064C                        l738 0628  
                      l914 0605                        l906 05ED                        l922 0579  
                      l930 0685                        l684 0574                        l676 0557  
                      l692 0549                        l916 0616                        l908 05F2  
                      l924 057C                        l940 0692                        l932 0688  
                      l678 055B                        l694 0552                        l686 053D  
                      l918 061B                        l926 0589                        l950 0699  
                      l942 0695                        l934 068A                        l688 0540  
                      l696 059E                        l928 058F                        l960 069E  
                      l952 069A                        l944 0696                        l936 068B  
                      l698 05A8                        l970 06C2                        l962 069F  
                      l954 069B                        l946 0697                        l938 068C  
                      l980 06E8                        l972 06C7                        l964 06A4  
                      l956 069C                        l948 0698                        l982 06EE  
                      l990 0700                        l974 06CF                        l966 06B1  
                      l958 069D                        l992 0706                        l984 06F1  
                      l976 06D5                        l968 06B6                        l994 0713  
                      l986 06F2                        l978 06DB                        l996 0719  
                      l988 06F3                        l998 071C                        u200 0605  
                      u201 0604                        u220 059C                        u221 059B  
                      u230 06DB                        u215 060D                        u231 06DA  
                      u240 0706                        u241 0705                        u250 0731  
                      u251 0730                        u307 06AA                        u180 05DC  
                      u260 075C                        u181 05DB                        u261 075B  
                      u317 06BC                        u270 0787                        u407 05CF  
                      u271 0786                        u327 06F9                        u280 07B2  
                      u417 0632                        u281 07B1                        u337 0724  
                      u290 07DD                        u427 0641                        u195 05E4  
                      u291 07DC                        u347 074F                        u437 0650  
                      u357 077A                        u447 054D                        u367 07A5  
                      u377 07D0                        u387 07E8                        u397 05BE  
                      fsr0 0004                       l1000 071D                       l1010 0744  
                     l1002 071E                       l1020 075C                       l1012 0747  
                     l1004 072B                       l1030 0774                       l1022 0769  
                     l1014 0748                       l1006 0731                       l1040 079D  
                     l1024 076F                       l1032 0781                       l1016 0749  
                     l1008 073E                       l1050 07BF                       l1042 079E  
                     l1034 0787                       l1026 0772                       l1018 0756  
                     l1052 07C5                       l1060 07D7                       l1044 079F  
                     l1036 0794                       l1028 0773                       l1070 07F3  
                     l1062 07DD                       l1054 07C8                       l1038 079A  
                     l1046 07AC                       l1064 07E2                       l1056 07C9  
                     l1048 07B2                       l1066 07EF                       l1058 07CA  
                     l1068 07F2                       STR_1 002E                       STR_2 0009  
                     STR_3 0009                       STR_4 0023                       STR_5 0038  
                     STR_6 0016                       STR_7 0016          ?_Lcd_Write_String 0070  
                     _main 0685                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0556                      ?_main 0070  
                    _ANSEL 0188    __size_of_Lcd_Set_Cursor 0052                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0685           __end_of_Lcd_Port 0578            __initialization 07F8  
             __end_of_main 07F8                     ??_main 007B         __size_of_Lcd_Clear 000D  
                   _ANSELH 0189                     _OSCCON 008F                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 0039            Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074  
          Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 053C             __pcstackCOMMON 0070             _Lcd_Set_Cursor 05D6  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pbssBANK0 0020  
               __pmaintext 0685  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0628  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 0003  
           _Lcd_Write_Char 059D                    _Lcd_Cmd 053C            ?_Lcd_Set_Cursor 0074  
                  __ptext1 0578                    __ptext2 059D                    __ptext3 05D6  
                  __ptext4 0628                    __ptext5 052F                    __ptext6 053C  
                  __ptext7 0556     __end_of_Lcd_Write_Char 05D6       end_of_initialization 07FC  
                Lcd_Port@a 0070                  _PORTAbits 0005                  _PORTBbits 0006  
                _PORTCbits 0007                  _PORTDbits 0008                  _PORTEbits 0009  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
                _Lcd_Clear 052F           _Lcd_Write_String 0578        start_initialization 07F8  
        __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0022                 ?_Lcd_Clear 0070  
          Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073                  ___latbits 0002  
                 ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0075                  __pstrings 0003  
                 Lcd_Cmd@a 0073                ??_Lcd_Clear 0074                __stringbase 0008  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 0628                   _Lcd_Port 0556  
 __end_of_Lcd_Write_String 059D           __size_of_Lcd_Cmd 001A         __end_of__stringtab 0009  
            __size_of_main 0173         Lcd_Write_Char@temp 0072                  stringcode 0003  
       Lcd_Set_Cursor@temp 007A                   stringdir 0003                   stringtab 0003  
